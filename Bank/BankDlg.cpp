
// BankDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "Bank.h"
#include "BankDlg.h"
#include "afxdialogex.h"
#include "ZhuJieMian_dlg.h"
#include "StaffDao.h"
#include "Tookit.h"
#include <mmsystem.h>

#include "BanLiKa.h"
#pragma comment(lib,"winmm.lib")//声音库
#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
public:
	afx_msg void On32774();
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
	ON_COMMAND(ID_32774, &CAboutDlg::On32774)
END_MESSAGE_MAP()


// CBankDlg 对话框



CBankDlg::CBankDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CBankDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDI_ICON2);
}

void CBankDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CBankDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON1_Ok, &CBankDlg::OnBnClickedButton1Ok)
	ON_BN_CLICKED(ID_APP_EXIT, &CBankDlg::OnBnClickedAppExit)
END_MESSAGE_MAP()


// CBankDlg 消息处理程序

BOOL CBankDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码

		//*********************************************设置要播放音乐***************************

	PlaySound(_T("yisheng.wav"),NULL,SND_ASYNC | SND_NODEFAULT);

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CBankDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CBankDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CBankDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CBankDlg::OnBnClickedButton1Ok()
{
	// TODO: 在此添加控件通知处理程序代码
	CString strname ;
	CString password ;
	this->GetDlgItemTextW(IDC_EDIT1_Uerse,strname); //获取用户名
	this->GetDlgItemTextW(IDC_EDIT2_password,password);//获取密码

	//调用工具类：将CString  转换成  char *

	char * p_strname = CTookit::Zhongwen(strname);

	char * p_password= CTookit::Zhongwen(password);


	//调用类函数，进行用户名和密码的匹配
	CStaffDao sta;
	if (sta.login(p_strname,p_password))
	{		
		ZhuJieMian_dlg dlg;
		char * name = sta.ret_name();//返回该对象的姓名
		
		dlg.Set_info(name);
		this->ShowWindow(SW_HIDE);//隐藏登录界面)
			
		INT_PTR nResponse = dlg.DoModal();
		if (nResponse == IDOK)
		{
			// TODO: 在此放置处理何时用
			//  “确定”来关闭对话框的代码
			this->ShowWindow(SW_SHOW);
			//退回到登录界面以后，清空文本框的值
			this->GetDlgItem(IDC_EDIT1_Uerse)->SetWindowTextW(_T(""));
			this->GetDlgItem(IDC_EDIT2_password)->SetWindowTextW(_T(""));
		}
		else if (nResponse == IDCANCEL)
		{
			// TODO: 在此放置处理何时用
			//  “取消”来关闭对话框的代码
			this->ShowWindow(SW_SHOW);
		}
	}
	else
	{
		MessageBox(_T("用户名或者密码错误！"),_T("失败"));
	}
}


void CBankDlg::OnBnClickedAppExit()
{
	// TODO: 在此添加控件通知处理程序代码
	CDialogEx::OnOK();
}


void CAboutDlg::On32774()
{
	CBanLiKa dlg;
	dlg.DoModal();
	// TODO: 在此添加命令处理程序代码
}
